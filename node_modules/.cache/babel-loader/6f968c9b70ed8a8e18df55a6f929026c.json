{"ast":null,"code":"var _jsxFileName = \"/Users/Krunal/Desktop/Investiversity/frontend/src/components/PortfolioCard.js\";\nimport React from 'react';\nimport { sellStock } from '../actions/stockActions';\nimport { connect } from 'react-redux';\n\nfunction PortfolioCard(props) {\n  function sellAndUpdate(e, eachStock, balance) {\n    if (e.target.quantity.value <= eachStock.quantity && eachStock.quantity > 0) {\n      props.sellStock(e, eachStock, balance);\n      let remainingStock = eachStock.quantity - e.target.quantity.value;\n\n      if (remainingStock === 0) {\n        e.target.parentElement.remove();\n      }\n    }\n\n    e.target.reset();\n  } // console.log(props.eachStock)\n\n\n  return React.createElement(\"div\", {\n    class: \" text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" Ticker:  \\xA0\\xA0\", props.eachStock.ticker, \" \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-dollar-sign\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \" \", props.eachStock.price, \" \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Stocks: \\xA0\\xA0 \", props.eachStock.quantity), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"  Total: \\xA0\\xA0 \", parseFloat(props.eachStock.total_price).toFixed(2), \" \"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    class: \"form-inline\",\n    onSubmit: e => sellAndUpdate(e, props.eachStock, {\n      \"remaining_balance\": props.remaining_balance,\n      \"invested_balance\": props.invested_balance\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    class: \"form-control mr-sm-2 col-md-4\",\n    type: \"number\",\n    step: \"1\",\n    name: \"quantity\",\n    min: \"1\",\n    required: \"required\",\n    placeholder: \"Stocks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), \" \\xA0\\xA0\", React.createElement(\"button\", {\n    class: \"btn btn-primary\",\n    \"data-toggle\": \"button\",\n    type: \"submit\",\n    style: {\n      margin: '5px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" SELL \")))));\n}\n\nexport const mapStateToProps = state => {\n  return state.stock;\n};\nexport default connect(mapStateToProps, {\n  sellStock\n})(PortfolioCard); //       <div class=\"card text-white bg-secondary border-light \">\n//         <div class=\"card-body\">\n//        {/* <Card  border='dark' bg='light'style={{width:'50%', margin: '5px'}}> */}\n//         {/* <Card.Body> */}\n//           <h5>  {props.eachStock.ticker} &nbsp; &nbsp; <i class=\"fas fa-dollar-sign\"></i> {props.eachStock.price} &nbsp; &nbsp; </h5>\n//           {/* <h6> */}\n//            <h5>Stocks: {props.eachStock.quantity} &nbsp; &nbsp; \n//            Total: {parseFloat(props.eachStock.total_price).toFixed(2)}  </h5>\n//            {/* </h6> */}\n//           <form  class=\"form-inline\" onSubmit={(e) => sellAndUpdate(e,props.eachStock, {\"remaining_balance\":props.remaining_balance,\"invested_balance\":props.invested_balance})}>\n//            <div>\n//             <input class=\"form-control mr-sm-2 col-md-6\" type='number' \n//             step='1' name='quantity' min='1' required=\"required\" placeholder=\"Stocks\"/>\n//           <button  class=\"btn btn-primary\"data-toggle=\"button\" type=\"submit\" style={{margin: '5px'}}> SELL </button>\n//           </div>\n//           </form> \n//        {/* </Card.Body> */}\n//         {/* </Card> */}\n//         </div>\n// </div>","map":{"version":3,"sources":["/Users/Krunal/Desktop/Investiversity/frontend/src/components/PortfolioCard.js"],"names":["React","sellStock","connect","PortfolioCard","props","sellAndUpdate","e","eachStock","balance","target","quantity","value","remainingStock","parentElement","remove","reset","ticker","price","parseFloat","total_price","toFixed","remaining_balance","invested_balance","margin","mapStateToProps","state","stock"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {sellStock} from '../actions/stockActions'\nimport {connect} from 'react-redux'\n\n\n\nfunction PortfolioCard(props) {\n    \nfunction sellAndUpdate(e,eachStock,balance) {\n  if(e.target.quantity.value <= eachStock.quantity &&  eachStock.quantity > 0 ){\n    props.sellStock(e, eachStock, balance)\n    let remainingStock = eachStock.quantity - e.target.quantity.value\n    if (remainingStock ===0){\n      e.target.parentElement.remove()\n    }\n  }\n  e.target.reset()\n  \n}  \n// console.log(props.eachStock)\n\n  return (\n    \n      <div class=\" text-center\">\n     <td> Ticker:  &nbsp;&nbsp;{props.eachStock.ticker} </td> \n         <td><i class=\"fas fa-dollar-sign\"></i> {props.eachStock.price} </td>\n          \n          <td>\n           Stocks: &nbsp;&nbsp; {props.eachStock.quantity}</td>\n         <td>  Total: &nbsp;&nbsp; {parseFloat(props.eachStock.total_price).toFixed(2)} </td> \n         <td> \n          <form  class=\"form-inline\" onSubmit={(e) => sellAndUpdate(e,props.eachStock, {\"remaining_balance\":props.remaining_balance,\"invested_balance\":props.invested_balance})}>\n           <div>\n            <input class=\"form-control mr-sm-2 col-md-4\" type='number' \n            step='1' name='quantity' min='1' required=\"required\" placeholder=\"Stocks\"/> &nbsp;&nbsp;\n          <button  class=\"btn btn-primary\"data-toggle=\"button\" type=\"submit\" style={{margin: '5px'}}> SELL </button>\n          </div>\n          </form> \n          </td>\n\n     </div>\n     \n  )\n\n}\n\nexport const mapStateToProps=(state)=>{\n  return state.stock\n}\nexport default connect(mapStateToProps,{sellStock})(PortfolioCard);\n\n\n      \n\n//       <div class=\"card text-white bg-secondary border-light \">\n//         <div class=\"card-body\">\n//        {/* <Card  border='dark' bg='light'style={{width:'50%', margin: '5px'}}> */}\n//         {/* <Card.Body> */}\n//           <h5>  {props.eachStock.ticker} &nbsp; &nbsp; <i class=\"fas fa-dollar-sign\"></i> {props.eachStock.price} &nbsp; &nbsp; </h5>\n//           {/* <h6> */}\n//            <h5>Stocks: {props.eachStock.quantity} &nbsp; &nbsp; \n//            Total: {parseFloat(props.eachStock.total_price).toFixed(2)}  </h5>\n//            {/* </h6> */}\n//           <form  class=\"form-inline\" onSubmit={(e) => sellAndUpdate(e,props.eachStock, {\"remaining_balance\":props.remaining_balance,\"invested_balance\":props.invested_balance})}>\n//            <div>\n//             <input class=\"form-control mr-sm-2 col-md-6\" type='number' \n//             step='1' name='quantity' min='1' required=\"required\" placeholder=\"Stocks\"/>\n//           <button  class=\"btn btn-primary\"data-toggle=\"button\" type=\"submit\" style={{margin: '5px'}}> SELL </button>\n//           </div>\n//           </form> \n        \n//        {/* </Card.Body> */}\n//         {/* </Card> */}\n//         </div>\n// </div>\n"]},"metadata":{},"sourceType":"module"}