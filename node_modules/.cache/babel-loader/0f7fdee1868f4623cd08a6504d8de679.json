{"ast":null,"code":"var _jsxFileName = \"/Users/Krunal/Desktop/Investiversity/frontend/src/components/LineChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { monthlySnap } from '../chartFunctions';\nimport { connect } from 'react-redux';\n\nfunction LineChart(props) {\n  let obj = props.chartPrice; // console.log(snapshot)\n\n  return React.createElement(Line, {\n    width: 300,\n    height: 300,\n    data: monthlySnap(obj),\n    options: {\n      maintainAspectRatio: true,\n      responsive: true,\n      cutoutPercentage: 60,\n      animateScale: true,\n      scales: {\n        xAxes: [{\n          ticks: {\n            fontColor: \"white\"\n          }\n        }],\n        yAxes: [{\n          ticks: {\n            fontColor: \"white\"\n          }\n        }]\n      }\n    },\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      labels: {\n        fontColor: 'white'\n      },\n      stockPrices: {\n        fontColor: 'white'\n      },\n      stockDates: {\n        fontColor: 'white'\n      }\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontColor: 'white',\n          fontSize: 18,\n          stepSize: 1,\n          beginAtZero: true\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          fontColor: 'white',\n          fontSize: 14,\n          stepSize: 1,\n          beginAtZero: true\n        }\n      }]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n}\n\nconst mapStateToProps = state => {\n  return state.stock;\n};\n\nexport default connect(mapStateToProps)(LineChart);","map":{"version":3,"sources":["/Users/Krunal/Desktop/Investiversity/frontend/src/components/LineChart.js"],"names":["React","Line","monthlySnap","connect","LineChart","props","obj","chartPrice","maintainAspectRatio","responsive","cutoutPercentage","animateScale","scales","xAxes","ticks","fontColor","yAxes","display","position","fullWidth","reverse","labels","stockPrices","stockDates","fontSize","stepSize","beginAtZero","mapStateToProps","state","stock"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAIC,GAAG,GAAGD,KAAK,CAACE,UAAhB,CADwB,CAE1B;;AAEE,SAEU,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAEL,WAAW,CAACI,GAAD,CAHnB;AAIE,IAAA,OAAO,EAAE;AACPE,MAAAA,mBAAmB,EAAE,IADd;AAEPC,MAAAA,UAAU,EAAE,IAFL;AAGPC,MAAAA,gBAAgB,EAAE,EAHX;AAIPC,MAAAA,YAAY,EAAE,IAJP;AAKPC,MAAAA,MAAM,EAAC;AACLC,QAAAA,KAAK,EAAC,CAAC;AACLC,UAAAA,KAAK,EAAC;AACJC,YAAAA,SAAS,EAAC;AADN;AADD,SAAD,CADD;AAMLC,QAAAA,KAAK,EAAC,CAAC;AACLF,UAAAA,KAAK,EAAC;AACJC,YAAAA,SAAS,EAAC;AADN;AADD,SAAD;AAND;AALA,KAJX;AAsBA,IAAA,MAAM,EAAE;AACNE,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,SAAS,EAAE,IAHL;AAINC,MAAAA,OAAO,EAAE,KAJH;AAKNC,MAAAA,MAAM,EAAE;AACNN,QAAAA,SAAS,EAAE;AADL,OALF;AAQNO,MAAAA,WAAW,EAAE;AACXP,QAAAA,SAAS,EAAE;AADA,OARP;AAWNQ,MAAAA,UAAU,EAAC;AACTR,QAAAA,SAAS,EAAC;AADD;AAXL,KAtBR;AAqCA,IAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CAAC;AACJF,QAAAA,KAAK,EAAE;AACHC,UAAAA,SAAS,EAAE,OADR;AAEHS,UAAAA,QAAQ,EAAE,EAFP;AAGHC,UAAAA,QAAQ,EAAE,CAHP;AAIHC,UAAAA,WAAW,EAAE;AAJV;AADH,OAAD,CADD;AASNb,MAAAA,KAAK,EAAE,CAAC;AACJC,QAAAA,KAAK,EAAE;AACHC,UAAAA,SAAS,EAAE,OADR;AAEHS,UAAAA,QAAQ,EAAE,EAFP;AAGHC,UAAAA,QAAQ,EAAE,CAHP;AAIHC,UAAAA,WAAW,EAAE;AAJV;AADH,OAAD;AATD,KArCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFV;AA4DD;;AAID,MAAMC,eAAe,GAAGC,KAAD,IAAS;AAC9B,SAAOA,KAAK,CAACC,KAAb;AACD,CAFD;;AAIA,eAAe1B,OAAO,CAACwB,eAAD,CAAP,CAAyBvB,SAAzB,CAAf","sourcesContent":["import React from 'react'\nimport {Line} from 'react-chartjs-2'\nimport {monthlySnap} from '../chartFunctions'\nimport {connect} from 'react-redux'\n\nfunction LineChart(props) {\n  let obj = props.chartPrice\n// console.log(snapshot)\n\n  return (\n          \n            <Line\n              width={300}\n              height={300}\n              data={monthlySnap(obj)}\n              options={{\n                maintainAspectRatio: true,\n                responsive: true,\n                cutoutPercentage: 60,\n                animateScale: true,\n                scales:{\n                  xAxes:[{\n                    ticks:{\n                      fontColor:\"white\"\n                    }\n                  }],\n                  yAxes:[{\n                    ticks:{\n                      fontColor:\"white\"\n                    }\n                  }]\n                }\n              }}\n            legend={{\n              display: true,\n              position: 'top',\n              fullWidth: true,\n              reverse: false, \n              labels: {\n                fontColor: 'white'\n              },\n              stockPrices: {\n                fontColor: 'white'\n              },\n              stockDates:{\n                fontColor:'white'\n              }\n            }}\n            scales={{\n              yAxes: [{\n                  ticks: {\n                      fontColor: 'white',\n                      fontSize: 18,\n                      stepSize: 1,\n                      beginAtZero: true\n                  }\n              }],\n              xAxes: [{\n                  ticks: {\n                      fontColor: 'white',\n                      fontSize: 14,\n                      stepSize: 1,\n                      beginAtZero: true\n                  }\n              }]\n          }}\n             />\n\n  )\n}\n\n\n\nconst mapStateToProps =(state)=>{\n  return state.stock\n}\n\nexport default connect(mapStateToProps)(LineChart);\n\n"]},"metadata":{},"sourceType":"module"}